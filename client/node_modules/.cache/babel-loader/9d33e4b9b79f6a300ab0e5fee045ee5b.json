{"ast":null,"code":"'use strict';\n\nconst http = require('http');\n\nconst EventEmitter = require('events');\n\nconst EE_ERROR = 'Registering more than one listener to a WebSocket is not supported.';\nconst DEFAULT_PAYLOAD_LIMIT = 16777216;\nlet _upgradeReq = null;\n\nfunction noop() {}\n\nfunction abortConnection(socket, code, name) {\n  socket.end('HTTP/1.1 ' + code + ' ' + name + '\\r\\n\\r\\n');\n}\n\nfunction emitConnection(ws) {\n  this.emit('connection', ws, _upgradeReq);\n}\n\nfunction onServerMessage(message, webSocket) {\n  webSocket.internalOnMessage(message);\n}\n\nconst native = (() => {\n  try {\n    try {\n      return process.binding('uws_builtin');\n    } catch (e) {\n      return require(`./uws_${process.platform}_${process.versions.modules}`);\n    }\n  } catch (e) {\n    const version = process.version.substring(1).split('.').map(function (n) {\n      return parseInt(n);\n    });\n    const lessThanSixFour = version[0] < 6 || version[0] === 6 && version[1] < 4;\n\n    if (process.platform === 'win32' && lessThanSixFour) {\n      throw new Error('µWebSockets requires Node.js 6.4.0 or greater on Windows.');\n    } else {\n      throw new Error('Compilation of µWebSockets has failed and there is no pre-compiled binary ' + 'available for your system. Please install a supported C++11 compiler and reinstall the module \\'uws\\'.');\n    }\n  }\n})();\n\nnative.setNoop(noop);\nconst clientGroup = native.client.group.create(0, DEFAULT_PAYLOAD_LIMIT);\nnative.client.group.onConnection(clientGroup, external => {\n  const webSocket = native.getUserData(external);\n  webSocket.external = external;\n  webSocket.internalOnOpen();\n});\nnative.client.group.onMessage(clientGroup, (message, webSocket) => {\n  webSocket.internalOnMessage(message);\n});\nnative.client.group.onDisconnection(clientGroup, (external, code, message, webSocket) => {\n  webSocket.external = null;\n  process.nextTick(() => {\n    webSocket.internalOnClose(code, message);\n  });\n  native.clearUserData(external);\n});\nnative.client.group.onPing(clientGroup, (message, webSocket) => {\n  webSocket.onping(message);\n});\nnative.client.group.onPong(clientGroup, (message, webSocket) => {\n  webSocket.onpong(message);\n});\nnative.client.group.onError(clientGroup, webSocket => {\n  process.nextTick(() => {\n    webSocket.internalOnError({\n      message: 'uWs client connection error',\n      stack: 'uWs client connection error'\n    });\n  });\n});\n\nclass WebSocket {\n  constructor(external) {\n    this.external = external;\n    this.internalOnMessage = noop;\n    this.internalOnClose = noop;\n    this.onping = noop;\n    this.onpong = noop;\n  }\n\n  get upgradeReq() {\n    return _upgradeReq;\n  }\n\n  set onmessage(f) {\n    if (f) {\n      this.internalOnMessage = message => {\n        f({\n          data: message\n        });\n      };\n    } else {\n      this.internalOnMessage = noop;\n    }\n  }\n\n  set onopen(f) {\n    if (f) {\n      this.internalOnOpen = f;\n    } else {\n      this.internalOnOpen = noop;\n    }\n  }\n\n  set onclose(f) {\n    if (f) {\n      this.internalOnClose = (code, message) => {\n        f({\n          code: code,\n          reason: message\n        });\n      };\n    } else {\n      this.internalOnClose = noop;\n    }\n  }\n\n  set onerror(f) {\n    if (f && this instanceof WebSocketClient) {\n      this.internalOnError = f;\n    } else {\n      this.internalOnError = noop;\n    }\n  }\n\n  emit(eventName, arg1, arg2) {\n    if (eventName === 'message') {\n      this.internalOnMessage(arg1);\n    } else if (eventName === 'close') {\n      this.internalOnClose(arg1, arg2);\n    } else if (eventName === 'ping') {\n      this.onping(arg1);\n    } else if (eventName === 'pong') {\n      this.onpong(arg1);\n    }\n\n    return this;\n  }\n\n  on(eventName, f) {\n    if (eventName === 'message') {\n      if (this.internalOnMessage !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.internalOnMessage = f;\n    } else if (eventName === 'close') {\n      if (this.internalOnClose !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.internalOnClose = f;\n    } else if (eventName === 'ping') {\n      if (this.onping !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.onping = f;\n    } else if (eventName === 'pong') {\n      if (this.onpong !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.onpong = f;\n    } else if (eventName === 'open') {\n      if (this.internalOnOpen !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.internalOnOpen = f;\n    } else if (eventName === 'error' && this instanceof WebSocketClient) {\n      if (this.internalOnError !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.internalOnError = f;\n    }\n\n    return this;\n  }\n\n  once(eventName, f) {\n    if (eventName === 'message') {\n      if (this.internalOnMessage !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.internalOnMessage = message => {\n        this.internalOnMessage = noop;\n        f(message);\n      };\n    } else if (eventName === 'open') {\n      if (this.internalOnOpen !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.internalOnOpen = () => {\n        this.internalOnOpen = noop;\n        f();\n      };\n    } else if (eventName === 'close') {\n      if (this.internalOnClose !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.internalOnClose = (code, message) => {\n        this.internalOnClose = noop;\n        f(code, message);\n      };\n    } else if (eventName === 'ping') {\n      if (this.onping !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.onping = () => {\n        this.onping = noop;\n        f();\n      };\n    } else if (eventName === 'pong') {\n      if (this.onpong !== noop) {\n        throw Error(EE_ERROR);\n      }\n\n      this.onpong = () => {\n        this.onpong = noop;\n        f();\n      };\n    }\n\n    return this;\n  }\n\n  removeAllListeners(eventName) {\n    if (!eventName || eventName === 'message') {\n      this.internalOnMessage = noop;\n    }\n\n    if (!eventName || eventName === 'open') {\n      this.internalOnOpen = noop;\n    }\n\n    if (!eventName || eventName === 'close') {\n      this.internalOnClose = noop;\n    }\n\n    if (!eventName || eventName === 'ping') {\n      this.onping = noop;\n    }\n\n    if (!eventName || eventName === 'pong') {\n      this.onpong = noop;\n    }\n\n    return this;\n  }\n\n  removeListener(eventName, cb) {\n    if (eventName === 'message' && this.internalOnMessage === cb) {\n      this.internalOnMessage = noop;\n    } else if (eventName === 'open' && this.internalOnOpen === cb) {\n      this.internalOnOpen = noop;\n    } else if (eventName === 'close' && this.internalOnClose === cb) {\n      this.internalOnClose = noop;\n    } else if (eventName === 'ping' && this.onping === cb) {\n      this.onping = noop;\n    } else if (eventName === 'pong' && this.onpong === cb) {\n      this.onpong = noop;\n    }\n\n    return this;\n  }\n\n  get OPEN() {\n    return WebSocketClient.OPEN;\n  }\n\n  get CLOSED() {\n    return WebSocketClient.CLOSED;\n  }\n\n  get readyState() {\n    return this.external ? WebSocketClient.OPEN : WebSocketClient.CLOSED;\n  }\n\n  get _socket() {\n    const address = this.external ? native.getAddress(this.external) : new Array(3);\n    return {\n      remotePort: address[0],\n      remoteAddress: address[1],\n      remoteFamily: address[2]\n    };\n  } // from here down, functions are not common between client and server\n\n\n  ping(message, options, dontFailWhenClosed) {\n    if (this.external) {\n      native.server.send(this.external, message, WebSocketClient.OPCODE_PING, false);\n    }\n  }\n\n  terminate() {\n    if (this.external) {\n      native.server.terminate(this.external);\n      this.external = null;\n    }\n  }\n\n  send(message, options, cb, compress) {\n    if (this.external) {\n      if (typeof options === 'function') {\n        cb = options;\n        options = null;\n      }\n\n      const binary = options && typeof options.binary === 'boolean' ? options.binary : typeof message !== 'string';\n      native.server.send(this.external, message, binary ? WebSocketClient.OPCODE_BINARY : WebSocketClient.OPCODE_TEXT, cb ? () => {\n        process.nextTick(cb);\n      } : undefined, compress);\n    } else if (cb) {\n      cb(new Error('not opened'));\n    }\n  }\n\n  close(code, data) {\n    if (this.external) {\n      native.server.close(this.external, code, data);\n      this.external = null;\n    }\n  }\n\n}\n\nclass WebSocketClient extends WebSocket {\n  constructor(uri) {\n    super(null);\n    this.internalOnOpen = noop;\n    this.internalOnError = noop;\n    native.connect(clientGroup, uri, this);\n  }\n\n  ping(message, options, dontFailWhenClosed) {\n    if (this.external) {\n      native.client.send(this.external, message, WebSocketClient.OPCODE_PING, false);\n    }\n  }\n\n  terminate() {\n    if (this.external) {\n      native.client.terminate(this.external);\n      this.external = null;\n    }\n  }\n\n  send(message, options, cb, compress) {\n    if (this.external) {\n      if (typeof options === 'function') {\n        cb = options;\n        options = null;\n      }\n\n      const binary = options && typeof options.binary === 'boolean' ? options.binary : typeof message !== 'string';\n      native.client.send(this.external, message, binary ? WebSocketClient.OPCODE_BINARY : WebSocketClient.OPCODE_TEXT, cb ? () => {\n        process.nextTick(cb);\n      } : undefined, compress);\n    } else if (cb) {\n      cb(new Error('not opened'));\n    }\n  }\n\n  close(code, data) {\n    if (this.external) {\n      native.client.close(this.external, code, data);\n      this.external = null;\n    }\n  }\n\n}\n\nclass Server extends EventEmitter {\n  constructor(options, callback) {\n    super();\n\n    if (!options) {\n      throw new TypeError('missing options');\n    }\n\n    if (options.port === undefined && !options.server && !options.noServer) {\n      throw new TypeError('invalid options');\n    }\n\n    var nativeOptions = 0;\n\n    if (options.perMessageDeflate !== undefined && options.perMessageDeflate !== false) {\n      nativeOptions |= WebSocketClient.PERMESSAGE_DEFLATE;\n\n      if (options.perMessageDeflate.serverNoContextTakeover === false) {\n        nativeOptions |= WebSocketClient.SLIDING_DEFLATE_WINDOW;\n      }\n    }\n\n    this.serverGroup = native.server.group.create(nativeOptions, options.maxPayload === undefined ? DEFAULT_PAYLOAD_LIMIT : options.maxPayload); // can these be made private?\n\n    this._upgradeCallback = noop;\n    this._upgradeListener = null;\n    this._noDelay = options.noDelay === undefined ? true : options.noDelay;\n    this._lastUpgradeListener = true;\n    this._passedHttpServer = options.server;\n\n    if (!options.noServer) {\n      this.httpServer = options.server ? options.server : http.createServer((request, response) => {\n        // todo: default HTTP response\n        response.end();\n      });\n\n      if (options.path && (!options.path.length || options.path[0] !== '/')) {\n        options.path = '/' + options.path;\n      }\n\n      this.httpServer.on('upgrade', this._upgradeListener = (request, socket, head) => {\n        if (!options.path || options.path == request.url.split('?')[0].split('#')[0]) {\n          if (options.verifyClient) {\n            const info = {\n              origin: request.headers.origin,\n              secure: request.connection.authorized !== undefined || request.connection.encrypted !== undefined,\n              req: request\n            };\n\n            if (options.verifyClient.length === 2) {\n              options.verifyClient(info, (result, code, name) => {\n                if (result) {\n                  this.handleUpgrade(request, socket, head, emitConnection);\n                } else {\n                  abortConnection(socket, code, name);\n                }\n              });\n            } else {\n              if (options.verifyClient(info)) {\n                this.handleUpgrade(request, socket, head, emitConnection);\n              } else {\n                abortConnection(socket, 400, 'Client verification failed');\n              }\n            }\n          } else {\n            this.handleUpgrade(request, socket, head, emitConnection);\n          }\n        } else {\n          if (this._lastUpgradeListener) {\n            abortConnection(socket, 400, 'URL not supported');\n          }\n        }\n      });\n      this.httpServer.on('newListener', (eventName, listener) => {\n        if (eventName === 'upgrade') {\n          this._lastUpgradeListener = false;\n        }\n      });\n      this.httpServer.on('error', err => {\n        this.emit('error', err);\n      });\n    }\n\n    native.server.group.onDisconnection(this.serverGroup, (external, code, message, webSocket) => {\n      webSocket.external = null;\n      process.nextTick(() => {\n        webSocket.internalOnClose(code, message);\n      });\n      native.clearUserData(external);\n    });\n    native.server.group.onMessage(this.serverGroup, onServerMessage);\n    native.server.group.onPing(this.serverGroup, (message, webSocket) => {\n      webSocket.onping(message);\n    });\n    native.server.group.onPong(this.serverGroup, (message, webSocket) => {\n      webSocket.onpong(message);\n    });\n    native.server.group.onConnection(this.serverGroup, external => {\n      const webSocket = new WebSocket(external);\n      native.setUserData(external, webSocket);\n\n      this._upgradeCallback(webSocket);\n\n      _upgradeReq = null;\n    });\n\n    if (options.port !== undefined) {\n      if (options.host) {\n        this.httpServer.listen(options.port, options.host, () => {\n          this.emit('listening');\n          callback && callback();\n        });\n      } else {\n        this.httpServer.listen(options.port, () => {\n          this.emit('listening');\n          callback && callback();\n        });\n      }\n    }\n  }\n\n  handleUpgrade(request, socket, upgradeHead, callback) {\n    if (socket._isNative) {\n      if (this.serverGroup) {\n        _upgradeReq = request;\n        this._upgradeCallback = callback ? callback : noop;\n        native.upgrade(this.serverGroup, socket.external, secKey, request.headers['sec-websocket-extensions'], request.headers['sec-websocket-protocol']);\n      }\n    } else {\n      const secKey = request.headers['sec-websocket-key'];\n      const socketHandle = socket.ssl ? socket._parent._handle : socket._handle;\n      const sslState = socket.ssl ? socket.ssl._external : null;\n\n      if (socketHandle && secKey && secKey.length == 24) {\n        socket.setNoDelay(this._noDelay);\n        const ticket = native.transfer(socketHandle.fd === -1 ? socketHandle : socketHandle.fd, sslState);\n        socket.on('close', error => {\n          if (this.serverGroup) {\n            _upgradeReq = request;\n            this._upgradeCallback = callback ? callback : noop;\n            native.upgrade(this.serverGroup, ticket, secKey, request.headers['sec-websocket-extensions'], request.headers['sec-websocket-protocol']);\n          }\n        });\n      }\n\n      socket.destroy();\n    }\n  }\n\n  broadcast(message, options) {\n    if (this.serverGroup) {\n      native.server.group.broadcast(this.serverGroup, message, options && options.binary || false);\n    }\n  }\n\n  startAutoPing(interval, userMessage) {\n    if (this.serverGroup) {\n      native.server.group.startAutoPing(this.serverGroup, interval, userMessage);\n    }\n  }\n\n  close(cb) {\n    if (this._upgradeListener && this.httpServer) {\n      this.httpServer.removeListener('upgrade', this._upgradeListener);\n\n      if (!this._passedHttpServer) {\n        this.httpServer.close();\n      }\n    }\n\n    if (this.serverGroup) {\n      native.server.group.close(this.serverGroup);\n      this.serverGroup = null;\n    }\n\n    if (typeof cb === 'function') {\n      // compatibility hack, 15 seconds timeout\n      setTimeout(cb, 20000);\n    }\n  }\n\n  get clients() {\n    if (this.serverGroup) {\n      return {\n        length: native.server.group.getSize(this.serverGroup),\n        forEach: cb => {\n          native.server.group.forEach(this.serverGroup, cb);\n        }\n      };\n    }\n  }\n\n}\n\nWebSocketClient.PERMESSAGE_DEFLATE = 1;\nWebSocketClient.SLIDING_DEFLATE_WINDOW = 16; //WebSocketClient.SERVER_NO_CONTEXT_TAKEOVER = 2;\n//WebSocketClient.CLIENT_NO_CONTEXT_TAKEOVER = 4;\n\nWebSocketClient.OPCODE_TEXT = 1;\nWebSocketClient.OPCODE_BINARY = 2;\nWebSocketClient.OPCODE_PING = 9;\nWebSocketClient.OPEN = 1;\nWebSocketClient.CLOSED = 0;\nWebSocketClient.Server = Server;\nWebSocketClient.http = native.httpServer;\nWebSocketClient.native = native;\nmodule.exports = WebSocketClient;","map":{"version":3,"sources":["/home/derek/projects/hackthevalley/myostressmanager/node_modules/uws/uws.js"],"names":["http","require","EventEmitter","EE_ERROR","DEFAULT_PAYLOAD_LIMIT","_upgradeReq","noop","abortConnection","socket","code","name","end","emitConnection","ws","emit","onServerMessage","message","webSocket","internalOnMessage","native","process","binding","e","platform","versions","modules","version","substring","split","map","n","parseInt","lessThanSixFour","Error","setNoop","clientGroup","client","group","create","onConnection","external","getUserData","internalOnOpen","onMessage","onDisconnection","nextTick","internalOnClose","clearUserData","onPing","onping","onPong","onpong","onError","internalOnError","stack","WebSocket","constructor","upgradeReq","onmessage","f","data","onopen","onclose","reason","onerror","WebSocketClient","eventName","arg1","arg2","on","once","removeAllListeners","removeListener","cb","OPEN","CLOSED","readyState","_socket","address","getAddress","Array","remotePort","remoteAddress","remoteFamily","ping","options","dontFailWhenClosed","server","send","OPCODE_PING","terminate","compress","binary","OPCODE_BINARY","OPCODE_TEXT","undefined","close","uri","connect","Server","callback","TypeError","port","noServer","nativeOptions","perMessageDeflate","PERMESSAGE_DEFLATE","serverNoContextTakeover","SLIDING_DEFLATE_WINDOW","serverGroup","maxPayload","_upgradeCallback","_upgradeListener","_noDelay","noDelay","_lastUpgradeListener","_passedHttpServer","httpServer","createServer","request","response","path","length","head","url","verifyClient","info","origin","headers","secure","connection","authorized","encrypted","req","result","handleUpgrade","listener","err","setUserData","host","listen","upgradeHead","_isNative","upgrade","secKey","socketHandle","ssl","_parent","_handle","sslState","_external","setNoDelay","ticket","transfer","fd","error","destroy","broadcast","startAutoPing","interval","userMessage","setTimeout","clients","getSize","forEach","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAA5B;;AACA,MAAME,QAAQ,GAAG,qEAAjB;AACA,MAAMC,qBAAqB,GAAG,QAA9B;AAEA,IAAIC,WAAW,GAAG,IAAlB;;AAEA,SAASC,IAAT,GAAgB,CAAE;;AAElB,SAASC,eAAT,CAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6C;AACzCF,EAAAA,MAAM,CAACG,GAAP,CAAW,cAAcF,IAAd,GAAqB,GAArB,GAA2BC,IAA3B,GAAkC,UAA7C;AACH;;AAED,SAASE,cAAT,CAAwBC,EAAxB,EAA4B;AACxB,OAAKC,IAAL,CAAU,YAAV,EAAwBD,EAAxB,EAA4BR,WAA5B;AACH;;AAED,SAASU,eAAT,CAAyBC,OAAzB,EAAkCC,SAAlC,EAA6C;AACzCA,EAAAA,SAAS,CAACC,iBAAV,CAA4BF,OAA5B;AACH;;AAED,MAAMG,MAAM,GAAG,CAAC,MAAM;AAClB,MAAI;AACA,QAAI;AACA,aAAOC,OAAO,CAACC,OAAR,CAAgB,aAAhB,CAAP;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACR,aAAOrB,OAAO,CAAE,SAAQmB,OAAO,CAACG,QAAS,IAAGH,OAAO,CAACI,QAAR,CAAiBC,OAAQ,EAAvD,CAAd;AACH;AACJ,GAND,CAME,OAAOH,CAAP,EAAU;AACR,UAAMI,OAAO,GAAGN,OAAO,CAACM,OAAR,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6BC,KAA7B,CAAmC,GAAnC,EAAwCC,GAAxC,CAA4C,UAASC,CAAT,EAAY;AACpE,aAAOC,QAAQ,CAACD,CAAD,CAAf;AACH,KAFe,CAAhB;AAGA,UAAME,eAAe,GAAGN,OAAO,CAAC,CAAD,CAAP,GAAa,CAAb,IAAmBA,OAAO,CAAC,CAAD,CAAP,KAAe,CAAf,IAAoBA,OAAO,CAAC,CAAD,CAAP,GAAa,CAA5E;;AAEA,QAAIN,OAAO,CAACG,QAAR,KAAqB,OAArB,IAAgCS,eAApC,EAAqD;AACjD,YAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,KAFD,MAEO;AACH,YAAM,IAAIA,KAAJ,CAAU,+EAChB,wGADM,CAAN;AAEH;AACJ;AACJ,CApBc,GAAf;;AAsBAd,MAAM,CAACe,OAAP,CAAe5B,IAAf;AAEA,MAAM6B,WAAW,GAAGhB,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BlC,qBAA9B,CAApB;AAEAe,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBE,YAApB,CAAiCJ,WAAjC,EAA+CK,QAAD,IAAc;AACxD,QAAMvB,SAAS,GAAGE,MAAM,CAACsB,WAAP,CAAmBD,QAAnB,CAAlB;AACAvB,EAAAA,SAAS,CAACuB,QAAV,GAAqBA,QAArB;AACAvB,EAAAA,SAAS,CAACyB,cAAV;AACH,CAJD;AAMAvB,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBM,SAApB,CAA8BR,WAA9B,EAA2C,CAACnB,OAAD,EAAUC,SAAV,KAAwB;AAC/DA,EAAAA,SAAS,CAACC,iBAAV,CAA4BF,OAA5B;AACH,CAFD;AAIAG,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBO,eAApB,CAAoCT,WAApC,EAAiD,CAACK,QAAD,EAAW/B,IAAX,EAAiBO,OAAjB,EAA0BC,SAA1B,KAAwC;AACrFA,EAAAA,SAAS,CAACuB,QAAV,GAAqB,IAArB;AAEApB,EAAAA,OAAO,CAACyB,QAAR,CAAiB,MAAM;AACnB5B,IAAAA,SAAS,CAAC6B,eAAV,CAA0BrC,IAA1B,EAAgCO,OAAhC;AACH,GAFD;AAIAG,EAAAA,MAAM,CAAC4B,aAAP,CAAqBP,QAArB;AACH,CARD;AAUArB,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBW,MAApB,CAA2Bb,WAA3B,EAAwC,CAACnB,OAAD,EAAUC,SAAV,KAAwB;AAC5DA,EAAAA,SAAS,CAACgC,MAAV,CAAiBjC,OAAjB;AACH,CAFD;AAIAG,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBa,MAApB,CAA2Bf,WAA3B,EAAwC,CAACnB,OAAD,EAAUC,SAAV,KAAwB;AAC5DA,EAAAA,SAAS,CAACkC,MAAV,CAAiBnC,OAAjB;AACH,CAFD;AAIAG,MAAM,CAACiB,MAAP,CAAcC,KAAd,CAAoBe,OAApB,CAA4BjB,WAA5B,EAA0ClB,SAAD,IAAe;AACpDG,EAAAA,OAAO,CAACyB,QAAR,CAAiB,MAAM;AACnB5B,IAAAA,SAAS,CAACoC,eAAV,CAA0B;AACtBrC,MAAAA,OAAO,EAAE,6BADa;AAEtBsC,MAAAA,KAAK,EAAE;AAFe,KAA1B;AAIH,GALD;AAMH,CAPD;;AASA,MAAMC,SAAN,CAAgB;AACZC,EAAAA,WAAW,CAAChB,QAAD,EAAW;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKtB,iBAAL,GAAyBZ,IAAzB;AACA,SAAKwC,eAAL,GAAuBxC,IAAvB;AACA,SAAK2C,MAAL,GAAc3C,IAAd;AACA,SAAK6C,MAAL,GAAc7C,IAAd;AACH;;AAED,MAAImD,UAAJ,GAAiB;AACb,WAAOpD,WAAP;AACH;;AAED,MAAIqD,SAAJ,CAAcC,CAAd,EAAiB;AACb,QAAIA,CAAJ,EAAO;AACH,WAAKzC,iBAAL,GAA0BF,OAAD,IAAa;AAClC2C,QAAAA,CAAC,CAAC;AAACC,UAAAA,IAAI,EAAE5C;AAAP,SAAD,CAAD;AACH,OAFD;AAGH,KAJD,MAIO;AACH,WAAKE,iBAAL,GAAyBZ,IAAzB;AACH;AACJ;;AAED,MAAIuD,MAAJ,CAAWF,CAAX,EAAc;AACV,QAAIA,CAAJ,EAAO;AACH,WAAKjB,cAAL,GAAsBiB,CAAtB;AACH,KAFD,MAEO;AACH,WAAKjB,cAAL,GAAsBpC,IAAtB;AACH;AACJ;;AAED,MAAIwD,OAAJ,CAAYH,CAAZ,EAAe;AACX,QAAIA,CAAJ,EAAO;AACH,WAAKb,eAAL,GAAuB,CAACrC,IAAD,EAAOO,OAAP,KAAmB;AACtC2C,QAAAA,CAAC,CAAC;AAAClD,UAAAA,IAAI,EAAEA,IAAP;AAAasD,UAAAA,MAAM,EAAE/C;AAArB,SAAD,CAAD;AACH,OAFD;AAGH,KAJD,MAIO;AACH,WAAK8B,eAAL,GAAuBxC,IAAvB;AACH;AACJ;;AAED,MAAI0D,OAAJ,CAAYL,CAAZ,EAAe;AACX,QAAIA,CAAC,IAAI,gBAAgBM,eAAzB,EAA0C;AACtC,WAAKZ,eAAL,GAAuBM,CAAvB;AACH,KAFD,MAEO;AACH,WAAKN,eAAL,GAAuB/C,IAAvB;AACH;AACJ;;AAEDQ,EAAAA,IAAI,CAACoD,SAAD,EAAYC,IAAZ,EAAkBC,IAAlB,EAAwB;AACxB,QAAIF,SAAS,KAAK,SAAlB,EAA6B;AACzB,WAAKhD,iBAAL,CAAuBiD,IAAvB;AACH,KAFD,MAEO,IAAID,SAAS,KAAK,OAAlB,EAA2B;AAC9B,WAAKpB,eAAL,CAAqBqB,IAArB,EAA2BC,IAA3B;AACH,KAFM,MAEA,IAAIF,SAAS,KAAK,MAAlB,EAA0B;AAC7B,WAAKjB,MAAL,CAAYkB,IAAZ;AACH,KAFM,MAEA,IAAID,SAAS,KAAK,MAAlB,EAA0B;AAC7B,WAAKf,MAAL,CAAYgB,IAAZ;AACH;;AACD,WAAO,IAAP;AACH;;AAEDE,EAAAA,EAAE,CAACH,SAAD,EAAYP,CAAZ,EAAe;AACb,QAAIO,SAAS,KAAK,SAAlB,EAA6B;AACzB,UAAI,KAAKhD,iBAAL,KAA2BZ,IAA/B,EAAqC;AACjC,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAKe,iBAAL,GAAyByC,CAAzB;AACH,KALD,MAKO,IAAIO,SAAS,KAAK,OAAlB,EAA2B;AAC9B,UAAI,KAAKpB,eAAL,KAAyBxC,IAA7B,EAAmC;AAC/B,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAK2C,eAAL,GAAuBa,CAAvB;AACH,KALM,MAKA,IAAIO,SAAS,KAAK,MAAlB,EAA0B;AAC7B,UAAI,KAAKjB,MAAL,KAAgB3C,IAApB,EAA0B;AACtB,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAK8C,MAAL,GAAcU,CAAd;AACH,KALM,MAKA,IAAIO,SAAS,KAAK,MAAlB,EAA0B;AAC7B,UAAI,KAAKf,MAAL,KAAgB7C,IAApB,EAA0B;AACtB,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAKgD,MAAL,GAAcQ,CAAd;AACH,KALM,MAKA,IAAIO,SAAS,KAAK,MAAlB,EAA0B;AAC7B,UAAI,KAAKxB,cAAL,KAAwBpC,IAA5B,EAAkC;AAC9B,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAKuC,cAAL,GAAsBiB,CAAtB;AACH,KALM,MAKA,IAAIO,SAAS,KAAK,OAAd,IAAyB,gBAAgBD,eAA7C,EAA8D;AACjE,UAAI,KAAKZ,eAAL,KAAyB/C,IAA7B,EAAmC;AAC/B,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAKkD,eAAL,GAAuBM,CAAvB;AACH;;AACD,WAAO,IAAP;AACH;;AAEDW,EAAAA,IAAI,CAACJ,SAAD,EAAYP,CAAZ,EAAe;AACf,QAAIO,SAAS,KAAK,SAAlB,EAA6B;AACzB,UAAI,KAAKhD,iBAAL,KAA2BZ,IAA/B,EAAqC;AACjC,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAKe,iBAAL,GAA0BF,OAAD,IAAa;AAClC,aAAKE,iBAAL,GAAyBZ,IAAzB;AACAqD,QAAAA,CAAC,CAAC3C,OAAD,CAAD;AACH,OAHD;AAIH,KARD,MAQO,IAAIkD,SAAS,KAAK,MAAlB,EAA0B;AAC7B,UAAI,KAAKxB,cAAL,KAAwBpC,IAA5B,EAAkC;AAC9B,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAKuC,cAAL,GAAsB,MAAM;AACxB,aAAKA,cAAL,GAAsBpC,IAAtB;AACAqD,QAAAA,CAAC;AACJ,OAHD;AAIH,KARM,MAQA,IAAIO,SAAS,KAAK,OAAlB,EAA2B;AAC9B,UAAI,KAAKpB,eAAL,KAAyBxC,IAA7B,EAAmC;AAC/B,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAK2C,eAAL,GAAuB,CAACrC,IAAD,EAAOO,OAAP,KAAmB;AACtC,aAAK8B,eAAL,GAAuBxC,IAAvB;AACAqD,QAAAA,CAAC,CAAClD,IAAD,EAAOO,OAAP,CAAD;AACH,OAHD;AAIH,KARM,MAQA,IAAIkD,SAAS,KAAK,MAAlB,EAA0B;AAC7B,UAAI,KAAKjB,MAAL,KAAgB3C,IAApB,EAA0B;AACtB,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAK8C,MAAL,GAAc,MAAM;AAChB,aAAKA,MAAL,GAAc3C,IAAd;AACAqD,QAAAA,CAAC;AACJ,OAHD;AAIH,KARM,MAQA,IAAIO,SAAS,KAAK,MAAlB,EAA0B;AAC7B,UAAI,KAAKf,MAAL,KAAgB7C,IAApB,EAA0B;AACtB,cAAM2B,KAAK,CAAC9B,QAAD,CAAX;AACH;;AACD,WAAKgD,MAAL,GAAc,MAAM;AAChB,aAAKA,MAAL,GAAc7C,IAAd;AACAqD,QAAAA,CAAC;AACJ,OAHD;AAIH;;AACD,WAAO,IAAP;AACH;;AAEDY,EAAAA,kBAAkB,CAACL,SAAD,EAAY;AAC1B,QAAI,CAACA,SAAD,IAAcA,SAAS,KAAK,SAAhC,EAA2C;AACvC,WAAKhD,iBAAL,GAAyBZ,IAAzB;AACH;;AACD,QAAI,CAAC4D,SAAD,IAAcA,SAAS,KAAK,MAAhC,EAAwC;AACpC,WAAKxB,cAAL,GAAsBpC,IAAtB;AACH;;AACD,QAAI,CAAC4D,SAAD,IAAcA,SAAS,KAAK,OAAhC,EAAyC;AACrC,WAAKpB,eAAL,GAAuBxC,IAAvB;AACH;;AACD,QAAI,CAAC4D,SAAD,IAAcA,SAAS,KAAK,MAAhC,EAAwC;AACpC,WAAKjB,MAAL,GAAc3C,IAAd;AACH;;AACD,QAAI,CAAC4D,SAAD,IAAcA,SAAS,KAAK,MAAhC,EAAwC;AACpC,WAAKf,MAAL,GAAc7C,IAAd;AACH;;AACD,WAAO,IAAP;AACH;;AAEDkE,EAAAA,cAAc,CAACN,SAAD,EAAYO,EAAZ,EAAgB;AAC1B,QAAIP,SAAS,KAAK,SAAd,IAA2B,KAAKhD,iBAAL,KAA2BuD,EAA1D,EAA8D;AAC1D,WAAKvD,iBAAL,GAAyBZ,IAAzB;AACH,KAFD,MAEO,IAAI4D,SAAS,KAAK,MAAd,IAAwB,KAAKxB,cAAL,KAAwB+B,EAApD,EAAwD;AAC3D,WAAK/B,cAAL,GAAsBpC,IAAtB;AACH,KAFM,MAEA,IAAI4D,SAAS,KAAK,OAAd,IAAyB,KAAKpB,eAAL,KAAyB2B,EAAtD,EAA0D;AAC7D,WAAK3B,eAAL,GAAuBxC,IAAvB;AACH,KAFM,MAEA,IAAI4D,SAAS,KAAK,MAAd,IAAwB,KAAKjB,MAAL,KAAgBwB,EAA5C,EAAgD;AACnD,WAAKxB,MAAL,GAAc3C,IAAd;AACH,KAFM,MAEA,IAAI4D,SAAS,KAAK,MAAd,IAAwB,KAAKf,MAAL,KAAgBsB,EAA5C,EAAgD;AACnD,WAAKtB,MAAL,GAAc7C,IAAd;AACH;;AACD,WAAO,IAAP;AACH;;AAED,MAAIoE,IAAJ,GAAW;AACP,WAAOT,eAAe,CAACS,IAAvB;AACH;;AAED,MAAIC,MAAJ,GAAa;AACT,WAAOV,eAAe,CAACU,MAAvB;AACH;;AAED,MAAIC,UAAJ,GAAiB;AACb,WAAO,KAAKpC,QAAL,GAAgByB,eAAe,CAACS,IAAhC,GAAuCT,eAAe,CAACU,MAA9D;AACH;;AAED,MAAIE,OAAJ,GAAc;AACV,UAAMC,OAAO,GAAG,KAAKtC,QAAL,GAAgBrB,MAAM,CAAC4D,UAAP,CAAkB,KAAKvC,QAAvB,CAAhB,GAAmD,IAAIwC,KAAJ,CAAU,CAAV,CAAnE;AACA,WAAO;AACHC,MAAAA,UAAU,EAAEH,OAAO,CAAC,CAAD,CADhB;AAEHI,MAAAA,aAAa,EAAEJ,OAAO,CAAC,CAAD,CAFnB;AAGHK,MAAAA,YAAY,EAAEL,OAAO,CAAC,CAAD;AAHlB,KAAP;AAKH,GAnMW,CAqMZ;;;AAEAM,EAAAA,IAAI,CAACpE,OAAD,EAAUqE,OAAV,EAAmBC,kBAAnB,EAAuC;AACvC,QAAI,KAAK9C,QAAT,EAAmB;AACfrB,MAAAA,MAAM,CAACoE,MAAP,CAAcC,IAAd,CAAmB,KAAKhD,QAAxB,EAAkCxB,OAAlC,EAA2CiD,eAAe,CAACwB,WAA3D,EAAwE,KAAxE;AACH;AACJ;;AAEDC,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKlD,QAAT,EAAmB;AACfrB,MAAAA,MAAM,CAACoE,MAAP,CAAcG,SAAd,CAAwB,KAAKlD,QAA7B;AACA,WAAKA,QAAL,GAAgB,IAAhB;AACH;AACJ;;AAEDgD,EAAAA,IAAI,CAACxE,OAAD,EAAUqE,OAAV,EAAmBZ,EAAnB,EAAuBkB,QAAvB,EAAiC;AACjC,QAAI,KAAKnD,QAAT,EAAmB;AACf,UAAI,OAAO6C,OAAP,KAAmB,UAAvB,EAAmC;AAC/BZ,QAAAA,EAAE,GAAGY,OAAL;AACAA,QAAAA,OAAO,GAAG,IAAV;AACH;;AAED,YAAMO,MAAM,GAAGP,OAAO,IAAI,OAAOA,OAAO,CAACO,MAAf,KAA0B,SAArC,GAAiDP,OAAO,CAACO,MAAzD,GAAkE,OAAO5E,OAAP,KAAmB,QAApG;AAEAG,MAAAA,MAAM,CAACoE,MAAP,CAAcC,IAAd,CAAmB,KAAKhD,QAAxB,EAAkCxB,OAAlC,EAA2C4E,MAAM,GAAG3B,eAAe,CAAC4B,aAAnB,GAAmC5B,eAAe,CAAC6B,WAApG,EAAiHrB,EAAE,GAAI,MAAM;AACzHrD,QAAAA,OAAO,CAACyB,QAAR,CAAiB4B,EAAjB;AACH,OAFkH,GAE9GsB,SAFL,EAEgBJ,QAFhB;AAGH,KAXD,MAWO,IAAIlB,EAAJ,EAAQ;AACXA,MAAAA,EAAE,CAAC,IAAIxC,KAAJ,CAAU,YAAV,CAAD,CAAF;AACH;AACJ;;AAED+D,EAAAA,KAAK,CAACvF,IAAD,EAAOmD,IAAP,EAAa;AACd,QAAI,KAAKpB,QAAT,EAAmB;AACfrB,MAAAA,MAAM,CAACoE,MAAP,CAAcS,KAAd,CAAoB,KAAKxD,QAAzB,EAAmC/B,IAAnC,EAAyCmD,IAAzC;AACA,WAAKpB,QAAL,GAAgB,IAAhB;AACH;AACJ;;AA1OW;;AA6OhB,MAAMyB,eAAN,SAA8BV,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACyC,GAAD,EAAM;AACb,UAAM,IAAN;AACA,SAAKvD,cAAL,GAAsBpC,IAAtB;AACA,SAAK+C,eAAL,GAAuB/C,IAAvB;AACAa,IAAAA,MAAM,CAAC+E,OAAP,CAAe/D,WAAf,EAA4B8D,GAA5B,EAAiC,IAAjC;AACH;;AAEDb,EAAAA,IAAI,CAACpE,OAAD,EAAUqE,OAAV,EAAmBC,kBAAnB,EAAuC;AACvC,QAAI,KAAK9C,QAAT,EAAmB;AACfrB,MAAAA,MAAM,CAACiB,MAAP,CAAcoD,IAAd,CAAmB,KAAKhD,QAAxB,EAAkCxB,OAAlC,EAA2CiD,eAAe,CAACwB,WAA3D,EAAwE,KAAxE;AACH;AACJ;;AAEDC,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKlD,QAAT,EAAmB;AACfrB,MAAAA,MAAM,CAACiB,MAAP,CAAcsD,SAAd,CAAwB,KAAKlD,QAA7B;AACA,WAAKA,QAAL,GAAgB,IAAhB;AACH;AACJ;;AAEDgD,EAAAA,IAAI,CAACxE,OAAD,EAAUqE,OAAV,EAAmBZ,EAAnB,EAAuBkB,QAAvB,EAAiC;AACjC,QAAI,KAAKnD,QAAT,EAAmB;AACf,UAAI,OAAO6C,OAAP,KAAmB,UAAvB,EAAmC;AAC/BZ,QAAAA,EAAE,GAAGY,OAAL;AACAA,QAAAA,OAAO,GAAG,IAAV;AACH;;AAED,YAAMO,MAAM,GAAGP,OAAO,IAAI,OAAOA,OAAO,CAACO,MAAf,KAA0B,SAArC,GAAiDP,OAAO,CAACO,MAAzD,GAAkE,OAAO5E,OAAP,KAAmB,QAApG;AAEAG,MAAAA,MAAM,CAACiB,MAAP,CAAcoD,IAAd,CAAmB,KAAKhD,QAAxB,EAAkCxB,OAAlC,EAA2C4E,MAAM,GAAG3B,eAAe,CAAC4B,aAAnB,GAAmC5B,eAAe,CAAC6B,WAApG,EAAiHrB,EAAE,GAAI,MAAM;AACzHrD,QAAAA,OAAO,CAACyB,QAAR,CAAiB4B,EAAjB;AACH,OAFkH,GAE9GsB,SAFL,EAEgBJ,QAFhB;AAGH,KAXD,MAWO,IAAIlB,EAAJ,EAAQ;AACXA,MAAAA,EAAE,CAAC,IAAIxC,KAAJ,CAAU,YAAV,CAAD,CAAF;AACH;AACJ;;AAED+D,EAAAA,KAAK,CAACvF,IAAD,EAAOmD,IAAP,EAAa;AACd,QAAI,KAAKpB,QAAT,EAAmB;AACfrB,MAAAA,MAAM,CAACiB,MAAP,CAAc4D,KAAd,CAAoB,KAAKxD,QAAzB,EAAmC/B,IAAnC,EAAyCmD,IAAzC;AACA,WAAKpB,QAAL,GAAgB,IAAhB;AACH;AACJ;;AA3CmC;;AA8CxC,MAAM2D,MAAN,SAAqBjG,YAArB,CAAkC;AAC9BsD,EAAAA,WAAW,CAAC6B,OAAD,EAAUe,QAAV,EAAoB;AAC3B;;AAEA,QAAI,CAACf,OAAL,EAAc;AACV,YAAM,IAAIgB,SAAJ,CAAc,iBAAd,CAAN;AACH;;AAED,QAAIhB,OAAO,CAACiB,IAAR,KAAiBP,SAAjB,IAA8B,CAACV,OAAO,CAACE,MAAvC,IAAiD,CAACF,OAAO,CAACkB,QAA9D,EAAwE;AACpE,YAAM,IAAIF,SAAJ,CAAc,iBAAd,CAAN;AACH;;AAED,QAAIG,aAAa,GAAG,CAApB;;AACA,QAAInB,OAAO,CAACoB,iBAAR,KAA8BV,SAA9B,IAA2CV,OAAO,CAACoB,iBAAR,KAA8B,KAA7E,EAAoF;AAChFD,MAAAA,aAAa,IAAIvC,eAAe,CAACyC,kBAAjC;;AAEA,UAAIrB,OAAO,CAACoB,iBAAR,CAA0BE,uBAA1B,KAAsD,KAA1D,EAAiE;AAC7DH,QAAAA,aAAa,IAAIvC,eAAe,CAAC2C,sBAAjC;AACH;AACJ;;AAED,SAAKC,WAAL,GAAmB1F,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoBC,MAApB,CAA2BkE,aAA3B,EAA0CnB,OAAO,CAACyB,UAAR,KAAuBf,SAAvB,GAAmC3F,qBAAnC,GAA2DiF,OAAO,CAACyB,UAA7G,CAAnB,CApB2B,CAsB3B;;AACA,SAAKC,gBAAL,GAAwBzG,IAAxB;AACA,SAAK0G,gBAAL,GAAwB,IAAxB;AACA,SAAKC,QAAL,GAAgB5B,OAAO,CAAC6B,OAAR,KAAoBnB,SAApB,GAAgC,IAAhC,GAAuCV,OAAO,CAAC6B,OAA/D;AACA,SAAKC,oBAAL,GAA4B,IAA5B;AACA,SAAKC,iBAAL,GAAyB/B,OAAO,CAACE,MAAjC;;AAEA,QAAI,CAACF,OAAO,CAACkB,QAAb,EAAuB;AACnB,WAAKc,UAAL,GAAkBhC,OAAO,CAACE,MAAR,GAAiBF,OAAO,CAACE,MAAzB,GAAkCvF,IAAI,CAACsH,YAAL,CAAkB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACzF;AACAA,QAAAA,QAAQ,CAAC7G,GAAT;AACH,OAHmD,CAApD;;AAKA,UAAI0E,OAAO,CAACoC,IAAR,KAAiB,CAACpC,OAAO,CAACoC,IAAR,CAAaC,MAAd,IAAwBrC,OAAO,CAACoC,IAAR,CAAa,CAAb,MAAoB,GAA7D,CAAJ,EAAuE;AACnEpC,QAAAA,OAAO,CAACoC,IAAR,GAAe,MAAMpC,OAAO,CAACoC,IAA7B;AACH;;AAED,WAAKJ,UAAL,CAAgBhD,EAAhB,CAAmB,SAAnB,EAA8B,KAAK2C,gBAAL,GAAyB,CAACO,OAAD,EAAU/G,MAAV,EAAkBmH,IAAlB,KAA2B;AAC9E,YAAI,CAACtC,OAAO,CAACoC,IAAT,IAAiBpC,OAAO,CAACoC,IAAR,IAAgBF,OAAO,CAACK,GAAR,CAAYhG,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,EAA0BA,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAArC,EAA8E;AAC1E,cAAIyD,OAAO,CAACwC,YAAZ,EAA0B;AACtB,kBAAMC,IAAI,GAAG;AACTC,cAAAA,MAAM,EAAER,OAAO,CAACS,OAAR,CAAgBD,MADf;AAETE,cAAAA,MAAM,EAAEV,OAAO,CAACW,UAAR,CAAmBC,UAAnB,KAAkCpC,SAAlC,IAA+CwB,OAAO,CAACW,UAAR,CAAmBE,SAAnB,KAAiCrC,SAF/E;AAGTsC,cAAAA,GAAG,EAAEd;AAHI,aAAb;;AAMA,gBAAIlC,OAAO,CAACwC,YAAR,CAAqBH,MAArB,KAAgC,CAApC,EAAuC;AACnCrC,cAAAA,OAAO,CAACwC,YAAR,CAAqBC,IAArB,EAA2B,CAACQ,MAAD,EAAS7H,IAAT,EAAeC,IAAf,KAAwB;AAC/C,oBAAI4H,MAAJ,EAAY;AACR,uBAAKC,aAAL,CAAmBhB,OAAnB,EAA4B/G,MAA5B,EAAoCmH,IAApC,EAA0C/G,cAA1C;AACH,iBAFD,MAEO;AACHL,kBAAAA,eAAe,CAACC,MAAD,EAASC,IAAT,EAAeC,IAAf,CAAf;AACH;AACJ,eAND;AAOH,aARD,MAQO;AACH,kBAAI2E,OAAO,CAACwC,YAAR,CAAqBC,IAArB,CAAJ,EAAgC;AAC5B,qBAAKS,aAAL,CAAmBhB,OAAnB,EAA4B/G,MAA5B,EAAoCmH,IAApC,EAA0C/G,cAA1C;AACH,eAFD,MAEO;AACHL,gBAAAA,eAAe,CAACC,MAAD,EAAS,GAAT,EAAc,4BAAd,CAAf;AACH;AACJ;AACJ,WAtBD,MAsBO;AACH,iBAAK+H,aAAL,CAAmBhB,OAAnB,EAA4B/G,MAA5B,EAAoCmH,IAApC,EAA0C/G,cAA1C;AACH;AACJ,SA1BD,MA0BO;AACH,cAAI,KAAKuG,oBAAT,EAA+B;AAC3B5G,YAAAA,eAAe,CAACC,MAAD,EAAS,GAAT,EAAc,mBAAd,CAAf;AACH;AACJ;AACJ,OAhCD;AAkCA,WAAK6G,UAAL,CAAgBhD,EAAhB,CAAmB,aAAnB,EAAkC,CAACH,SAAD,EAAYsE,QAAZ,KAAyB;AACvD,YAAItE,SAAS,KAAK,SAAlB,EAA6B;AACzB,eAAKiD,oBAAL,GAA4B,KAA5B;AACH;AACJ,OAJD;AAMA,WAAKE,UAAL,CAAgBhD,EAAhB,CAAmB,OAAnB,EAA6BoE,GAAD,IAAS;AACjC,aAAK3H,IAAL,CAAU,OAAV,EAAmB2H,GAAnB;AACH,OAFD;AAGH;;AAEDtH,IAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoBO,eAApB,CAAoC,KAAKiE,WAAzC,EAAsD,CAACrE,QAAD,EAAW/B,IAAX,EAAiBO,OAAjB,EAA0BC,SAA1B,KAAwC;AAC1FA,MAAAA,SAAS,CAACuB,QAAV,GAAqB,IAArB;AAEApB,MAAAA,OAAO,CAACyB,QAAR,CAAiB,MAAM;AACnB5B,QAAAA,SAAS,CAAC6B,eAAV,CAA0BrC,IAA1B,EAAgCO,OAAhC;AACH,OAFD;AAIAG,MAAAA,MAAM,CAAC4B,aAAP,CAAqBP,QAArB;AACH,KARD;AAUArB,IAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoBM,SAApB,CAA8B,KAAKkE,WAAnC,EAAgD9F,eAAhD;AAEAI,IAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoBW,MAApB,CAA2B,KAAK6D,WAAhC,EAA6C,CAAC7F,OAAD,EAAUC,SAAV,KAAwB;AACjEA,MAAAA,SAAS,CAACgC,MAAV,CAAiBjC,OAAjB;AACH,KAFD;AAIAG,IAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoBa,MAApB,CAA2B,KAAK2D,WAAhC,EAA6C,CAAC7F,OAAD,EAAUC,SAAV,KAAwB;AACjEA,MAAAA,SAAS,CAACkC,MAAV,CAAiBnC,OAAjB;AACH,KAFD;AAIAG,IAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoBE,YAApB,CAAiC,KAAKsE,WAAtC,EAAoDrE,QAAD,IAAc;AAC7D,YAAMvB,SAAS,GAAG,IAAIsC,SAAJ,CAAcf,QAAd,CAAlB;AAEArB,MAAAA,MAAM,CAACuH,WAAP,CAAmBlG,QAAnB,EAA6BvB,SAA7B;;AACA,WAAK8F,gBAAL,CAAsB9F,SAAtB;;AACAZ,MAAAA,WAAW,GAAG,IAAd;AACH,KAND;;AAQA,QAAIgF,OAAO,CAACiB,IAAR,KAAiBP,SAArB,EAAgC;AAC5B,UAAIV,OAAO,CAACsD,IAAZ,EAAkB;AACd,aAAKtB,UAAL,CAAgBuB,MAAhB,CAAuBvD,OAAO,CAACiB,IAA/B,EAAqCjB,OAAO,CAACsD,IAA7C,EAAmD,MAAM;AACrD,eAAK7H,IAAL,CAAU,WAAV;AACAsF,UAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACH,SAHD;AAIH,OALD,MAKO;AACH,aAAKiB,UAAL,CAAgBuB,MAAhB,CAAuBvD,OAAO,CAACiB,IAA/B,EAAqC,MAAM;AACvC,eAAKxF,IAAL,CAAU,WAAV;AACAsF,UAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACH,SAHD;AAIH;AACJ;AACJ;;AAEDmC,EAAAA,aAAa,CAAChB,OAAD,EAAU/G,MAAV,EAAkBqI,WAAlB,EAA+BzC,QAA/B,EAAyC;AAClD,QAAI5F,MAAM,CAACsI,SAAX,EAAsB;AAClB,UAAI,KAAKjC,WAAT,EAAsB;AAClBxG,QAAAA,WAAW,GAAGkH,OAAd;AACA,aAAKR,gBAAL,GAAwBX,QAAQ,GAAGA,QAAH,GAAc9F,IAA9C;AACAa,QAAAA,MAAM,CAAC4H,OAAP,CAAe,KAAKlC,WAApB,EAAiCrG,MAAM,CAACgC,QAAxC,EAAkDwG,MAAlD,EAA0DzB,OAAO,CAACS,OAAR,CAAgB,0BAAhB,CAA1D,EAAuGT,OAAO,CAACS,OAAR,CAAgB,wBAAhB,CAAvG;AACH;AACJ,KAND,MAMO;AACH,YAAMgB,MAAM,GAAGzB,OAAO,CAACS,OAAR,CAAgB,mBAAhB,CAAf;AACA,YAAMiB,YAAY,GAAGzI,MAAM,CAAC0I,GAAP,GAAa1I,MAAM,CAAC2I,OAAP,CAAeC,OAA5B,GAAsC5I,MAAM,CAAC4I,OAAlE;AACA,YAAMC,QAAQ,GAAG7I,MAAM,CAAC0I,GAAP,GAAa1I,MAAM,CAAC0I,GAAP,CAAWI,SAAxB,GAAoC,IAArD;;AACA,UAAIL,YAAY,IAAID,MAAhB,IAA0BA,MAAM,CAACtB,MAAP,IAAiB,EAA/C,EAAmD;AAC/ClH,QAAAA,MAAM,CAAC+I,UAAP,CAAkB,KAAKtC,QAAvB;AACA,cAAMuC,MAAM,GAAGrI,MAAM,CAACsI,QAAP,CAAgBR,YAAY,CAACS,EAAb,KAAoB,CAAC,CAArB,GAAyBT,YAAzB,GAAwCA,YAAY,CAACS,EAArE,EAAyEL,QAAzE,CAAf;AACA7I,QAAAA,MAAM,CAAC6D,EAAP,CAAU,OAAV,EAAoBsF,KAAD,IAAW;AAC1B,cAAI,KAAK9C,WAAT,EAAsB;AAClBxG,YAAAA,WAAW,GAAGkH,OAAd;AACA,iBAAKR,gBAAL,GAAwBX,QAAQ,GAAGA,QAAH,GAAc9F,IAA9C;AACAa,YAAAA,MAAM,CAAC4H,OAAP,CAAe,KAAKlC,WAApB,EAAiC2C,MAAjC,EAAyCR,MAAzC,EAAiDzB,OAAO,CAACS,OAAR,CAAgB,0BAAhB,CAAjD,EAA8FT,OAAO,CAACS,OAAR,CAAgB,wBAAhB,CAA9F;AACH;AACJ,SAND;AAOH;;AACDxH,MAAAA,MAAM,CAACoJ,OAAP;AACH;AACJ;;AAEDC,EAAAA,SAAS,CAAC7I,OAAD,EAAUqE,OAAV,EAAmB;AACxB,QAAI,KAAKwB,WAAT,EAAsB;AAClB1F,MAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoBwH,SAApB,CAA8B,KAAKhD,WAAnC,EAAgD7F,OAAhD,EAAyDqE,OAAO,IAAIA,OAAO,CAACO,MAAnB,IAA6B,KAAtF;AACH;AACJ;;AAEDkE,EAAAA,aAAa,CAACC,QAAD,EAAWC,WAAX,EAAwB;AACjC,QAAI,KAAKnD,WAAT,EAAsB;AAClB1F,MAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoByH,aAApB,CAAkC,KAAKjD,WAAvC,EAAoDkD,QAApD,EAA8DC,WAA9D;AACH;AACJ;;AAEDhE,EAAAA,KAAK,CAACvB,EAAD,EAAK;AACN,QAAI,KAAKuC,gBAAL,IAAyB,KAAKK,UAAlC,EAA8C;AAC1C,WAAKA,UAAL,CAAgB7C,cAAhB,CAA+B,SAA/B,EAA0C,KAAKwC,gBAA/C;;AAEA,UAAI,CAAC,KAAKI,iBAAV,EAA6B;AACzB,aAAKC,UAAL,CAAgBrB,KAAhB;AACH;AACJ;;AAED,QAAI,KAAKa,WAAT,EAAsB;AAClB1F,MAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoB2D,KAApB,CAA0B,KAAKa,WAA/B;AACA,WAAKA,WAAL,GAAmB,IAAnB;AACH;;AAED,QAAI,OAAOpC,EAAP,KAAc,UAAlB,EAA8B;AAC1B;AACAwF,MAAAA,UAAU,CAACxF,EAAD,EAAK,KAAL,CAAV;AACH;AACJ;;AAED,MAAIyF,OAAJ,GAAc;AACV,QAAI,KAAKrD,WAAT,EAAsB;AAClB,aAAO;AACHa,QAAAA,MAAM,EAAEvG,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoB8H,OAApB,CAA4B,KAAKtD,WAAjC,CADL;AAEHuD,QAAAA,OAAO,EAAI3F,EAAD,IAAQ;AAACtD,UAAAA,MAAM,CAACoE,MAAP,CAAclD,KAAd,CAAoB+H,OAApB,CAA4B,KAAKvD,WAAjC,EAA8CpC,EAA9C;AAAkD;AAFlE,OAAP;AAIH;AACJ;;AAjM6B;;AAoMlCR,eAAe,CAACyC,kBAAhB,GAAqC,CAArC;AACAzC,eAAe,CAAC2C,sBAAhB,GAAyC,EAAzC,C,CACA;AACA;;AACA3C,eAAe,CAAC6B,WAAhB,GAA8B,CAA9B;AACA7B,eAAe,CAAC4B,aAAhB,GAAgC,CAAhC;AACA5B,eAAe,CAACwB,WAAhB,GAA8B,CAA9B;AACAxB,eAAe,CAACS,IAAhB,GAAuB,CAAvB;AACAT,eAAe,CAACU,MAAhB,GAAyB,CAAzB;AACAV,eAAe,CAACkC,MAAhB,GAAyBA,MAAzB;AACAlC,eAAe,CAACjE,IAAhB,GAAuBmB,MAAM,CAACkG,UAA9B;AACApD,eAAe,CAAC9C,MAAhB,GAAyBA,MAAzB;AACAkJ,MAAM,CAACC,OAAP,GAAiBrG,eAAjB","sourcesContent":["'use strict';\n\nconst http = require('http');\nconst EventEmitter = require('events');\nconst EE_ERROR = 'Registering more than one listener to a WebSocket is not supported.';\nconst DEFAULT_PAYLOAD_LIMIT = 16777216;\n\nlet _upgradeReq = null;\n\nfunction noop() {}\n\nfunction abortConnection(socket, code, name) {\n    socket.end('HTTP/1.1 ' + code + ' ' + name + '\\r\\n\\r\\n');\n}\n\nfunction emitConnection(ws) {\n    this.emit('connection', ws, _upgradeReq);\n}\n\nfunction onServerMessage(message, webSocket) {\n    webSocket.internalOnMessage(message);\n}\n\nconst native = (() => {\n    try {\n        try {\n            return process.binding('uws_builtin');\n        } catch (e) {\n            return require(`./uws_${process.platform}_${process.versions.modules}`);\n        }\n    } catch (e) {\n        const version = process.version.substring(1).split('.').map(function(n) {\n            return parseInt(n);\n        });\n        const lessThanSixFour = version[0] < 6 || (version[0] === 6 && version[1] < 4);\n\n        if (process.platform === 'win32' && lessThanSixFour) {\n            throw new Error('µWebSockets requires Node.js 6.4.0 or greater on Windows.');\n        } else {\n            throw new Error('Compilation of µWebSockets has failed and there is no pre-compiled binary ' +\n            'available for your system. Please install a supported C++11 compiler and reinstall the module \\'uws\\'.');\n        }\n    }\n})();\n\nnative.setNoop(noop);\n\nconst clientGroup = native.client.group.create(0, DEFAULT_PAYLOAD_LIMIT);\n\nnative.client.group.onConnection(clientGroup, (external) => {\n    const webSocket = native.getUserData(external);\n    webSocket.external = external;\n    webSocket.internalOnOpen();\n});\n\nnative.client.group.onMessage(clientGroup, (message, webSocket) => {\n    webSocket.internalOnMessage(message);\n});\n\nnative.client.group.onDisconnection(clientGroup, (external, code, message, webSocket) => {\n    webSocket.external = null;\n\n    process.nextTick(() => {\n        webSocket.internalOnClose(code, message);\n    });\n\n    native.clearUserData(external);\n});\n\nnative.client.group.onPing(clientGroup, (message, webSocket) => {\n    webSocket.onping(message);\n});\n\nnative.client.group.onPong(clientGroup, (message, webSocket) => {\n    webSocket.onpong(message);\n});\n\nnative.client.group.onError(clientGroup, (webSocket) => {\n    process.nextTick(() => {\n        webSocket.internalOnError({\n            message: 'uWs client connection error',\n            stack: 'uWs client connection error'\n        });\n    });\n});\n\nclass WebSocket {\n    constructor(external) {\n        this.external = external;\n        this.internalOnMessage = noop;\n        this.internalOnClose = noop;\n        this.onping = noop;\n        this.onpong = noop;\n    }\n\n    get upgradeReq() {\n        return _upgradeReq;\n    }\n\n    set onmessage(f) {\n        if (f) {\n            this.internalOnMessage = (message) => {\n                f({data: message});\n            };\n        } else {\n            this.internalOnMessage = noop;\n        }\n    }\n\n    set onopen(f) {\n        if (f) {\n            this.internalOnOpen = f;\n        } else {\n            this.internalOnOpen = noop;\n        }\n    }\n\n    set onclose(f) {\n        if (f) {\n            this.internalOnClose = (code, message) => {\n                f({code: code, reason: message});\n            };\n        } else {\n            this.internalOnClose = noop;\n        }\n    }\n\n    set onerror(f) {\n        if (f && this instanceof WebSocketClient) {\n            this.internalOnError = f;\n        } else {\n            this.internalOnError = noop;\n        }\n    }\n\n    emit(eventName, arg1, arg2) {\n        if (eventName === 'message') {\n            this.internalOnMessage(arg1);\n        } else if (eventName === 'close') {\n            this.internalOnClose(arg1, arg2);\n        } else if (eventName === 'ping') {\n            this.onping(arg1);\n        } else if (eventName === 'pong') {\n            this.onpong(arg1);\n        }\n        return this;\n    }\n\n    on(eventName, f) {\n        if (eventName === 'message') {\n            if (this.internalOnMessage !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.internalOnMessage = f;\n        } else if (eventName === 'close') {\n            if (this.internalOnClose !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.internalOnClose = f;\n        } else if (eventName === 'ping') {\n            if (this.onping !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.onping = f;\n        } else if (eventName === 'pong') {\n            if (this.onpong !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.onpong = f;\n        } else if (eventName === 'open') {\n            if (this.internalOnOpen !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.internalOnOpen = f;\n        } else if (eventName === 'error' && this instanceof WebSocketClient) {\n            if (this.internalOnError !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.internalOnError = f;\n        }\n        return this;\n    }\n\n    once(eventName, f) {\n        if (eventName === 'message') {\n            if (this.internalOnMessage !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.internalOnMessage = (message) => {\n                this.internalOnMessage = noop;\n                f(message);\n            };\n        } else if (eventName === 'open') {\n            if (this.internalOnOpen !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.internalOnOpen = () => {\n                this.internalOnOpen = noop;\n                f();\n            };\n        } else if (eventName === 'close') {\n            if (this.internalOnClose !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.internalOnClose = (code, message) => {\n                this.internalOnClose = noop;\n                f(code, message);\n            };\n        } else if (eventName === 'ping') {\n            if (this.onping !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.onping = () => {\n                this.onping = noop;\n                f();\n            };\n        } else if (eventName === 'pong') {\n            if (this.onpong !== noop) {\n                throw Error(EE_ERROR);\n            }\n            this.onpong = () => {\n                this.onpong = noop;\n                f();\n            };\n        }\n        return this;\n    }\n\n    removeAllListeners(eventName) {\n        if (!eventName || eventName === 'message') {\n            this.internalOnMessage = noop;\n        }\n        if (!eventName || eventName === 'open') {\n            this.internalOnOpen = noop;\n        }\n        if (!eventName || eventName === 'close') {\n            this.internalOnClose = noop;\n        }\n        if (!eventName || eventName === 'ping') {\n            this.onping = noop;\n        }\n        if (!eventName || eventName === 'pong') {\n            this.onpong = noop;\n        }\n        return this;\n    }\n\n    removeListener(eventName, cb) {\n        if (eventName === 'message' && this.internalOnMessage === cb) {\n            this.internalOnMessage = noop;\n        } else if (eventName === 'open' && this.internalOnOpen === cb) {\n            this.internalOnOpen = noop;\n        } else if (eventName === 'close' && this.internalOnClose === cb) {\n            this.internalOnClose = noop;\n        } else if (eventName === 'ping' && this.onping === cb) {\n            this.onping = noop;\n        } else if (eventName === 'pong' && this.onpong === cb) {\n            this.onpong = noop;\n        }\n        return this;\n    }\n\n    get OPEN() {\n        return WebSocketClient.OPEN;\n    }\n\n    get CLOSED() {\n        return WebSocketClient.CLOSED;\n    }\n\n    get readyState() {\n        return this.external ? WebSocketClient.OPEN : WebSocketClient.CLOSED;\n    }\n\n    get _socket() {\n        const address = this.external ? native.getAddress(this.external) : new Array(3);\n        return {\n            remotePort: address[0],\n            remoteAddress: address[1],\n            remoteFamily: address[2]\n        };\n    }\n\n    // from here down, functions are not common between client and server\n\n    ping(message, options, dontFailWhenClosed) {\n        if (this.external) {\n            native.server.send(this.external, message, WebSocketClient.OPCODE_PING, false);\n        }\n    }\n\n    terminate() {\n        if (this.external) {\n            native.server.terminate(this.external);\n            this.external = null;\n        }\n    }\n\n    send(message, options, cb, compress) {\n        if (this.external) {\n            if (typeof options === 'function') {\n                cb = options;\n                options = null;\n            }\n\n            const binary = options && typeof options.binary === 'boolean' ? options.binary : typeof message !== 'string';\n\n            native.server.send(this.external, message, binary ? WebSocketClient.OPCODE_BINARY : WebSocketClient.OPCODE_TEXT, cb ? (() => {\n                process.nextTick(cb);\n            }) : undefined, compress);\n        } else if (cb) {\n            cb(new Error('not opened'));\n        }\n    }\n\n    close(code, data) {\n        if (this.external) {\n            native.server.close(this.external, code, data);\n            this.external = null;\n        }\n    }\n}\n\nclass WebSocketClient extends WebSocket {\n    constructor(uri) {\n        super(null);\n        this.internalOnOpen = noop;\n        this.internalOnError = noop;\n        native.connect(clientGroup, uri, this);\n    }\n\n    ping(message, options, dontFailWhenClosed) {\n        if (this.external) {\n            native.client.send(this.external, message, WebSocketClient.OPCODE_PING, false);\n        }\n    }\n\n    terminate() {\n        if (this.external) {\n            native.client.terminate(this.external);\n            this.external = null;\n        }\n    }\n\n    send(message, options, cb, compress) {\n        if (this.external) {\n            if (typeof options === 'function') {\n                cb = options;\n                options = null;\n            }\n\n            const binary = options && typeof options.binary === 'boolean' ? options.binary : typeof message !== 'string';\n\n            native.client.send(this.external, message, binary ? WebSocketClient.OPCODE_BINARY : WebSocketClient.OPCODE_TEXT, cb ? (() => {\n                process.nextTick(cb);\n            }) : undefined, compress);\n        } else if (cb) {\n            cb(new Error('not opened'));\n        }\n    }\n\n    close(code, data) {\n        if (this.external) {\n            native.client.close(this.external, code, data);\n            this.external = null;\n        }\n    }\n}\n\nclass Server extends EventEmitter {\n    constructor(options, callback) {\n        super();\n\n        if (!options) {\n            throw new TypeError('missing options');\n        }\n\n        if (options.port === undefined && !options.server && !options.noServer) {\n            throw new TypeError('invalid options');\n        }\n\n        var nativeOptions = 0;\n        if (options.perMessageDeflate !== undefined && options.perMessageDeflate !== false) {\n            nativeOptions |= WebSocketClient.PERMESSAGE_DEFLATE;\n\n            if (options.perMessageDeflate.serverNoContextTakeover === false) {\n                nativeOptions |= WebSocketClient.SLIDING_DEFLATE_WINDOW;\n            }\n        }\n\n        this.serverGroup = native.server.group.create(nativeOptions, options.maxPayload === undefined ? DEFAULT_PAYLOAD_LIMIT : options.maxPayload);\n\n        // can these be made private?\n        this._upgradeCallback = noop;\n        this._upgradeListener = null;\n        this._noDelay = options.noDelay === undefined ? true : options.noDelay;\n        this._lastUpgradeListener = true;\n        this._passedHttpServer = options.server;\n\n        if (!options.noServer) {\n            this.httpServer = options.server ? options.server : http.createServer((request, response) => {\n                // todo: default HTTP response\n                response.end();\n            });\n\n            if (options.path && (!options.path.length || options.path[0] !== '/')) {\n                options.path = '/' + options.path;\n            }\n\n            this.httpServer.on('upgrade', this._upgradeListener = ((request, socket, head) => {\n                if (!options.path || options.path == request.url.split('?')[0].split('#')[0]) {\n                    if (options.verifyClient) {\n                        const info = {\n                            origin: request.headers.origin,\n                            secure: request.connection.authorized !== undefined || request.connection.encrypted !== undefined,\n                            req: request\n                        };\n\n                        if (options.verifyClient.length === 2) {\n                            options.verifyClient(info, (result, code, name) => {\n                                if (result) {\n                                    this.handleUpgrade(request, socket, head, emitConnection);\n                                } else {\n                                    abortConnection(socket, code, name);\n                                }\n                            });\n                        } else {\n                            if (options.verifyClient(info)) {\n                                this.handleUpgrade(request, socket, head, emitConnection);\n                            } else {\n                                abortConnection(socket, 400, 'Client verification failed');\n                            }\n                        }\n                    } else {\n                        this.handleUpgrade(request, socket, head, emitConnection);\n                    }\n                } else {\n                    if (this._lastUpgradeListener) {\n                        abortConnection(socket, 400, 'URL not supported');\n                    }\n                }\n            }));\n\n            this.httpServer.on('newListener', (eventName, listener) => {\n                if (eventName === 'upgrade') {\n                    this._lastUpgradeListener = false;\n                }\n            });\n\n            this.httpServer.on('error', (err) => {\n                this.emit('error', err);\n            });\n        }\n\n        native.server.group.onDisconnection(this.serverGroup, (external, code, message, webSocket) => {\n            webSocket.external = null;\n\n            process.nextTick(() => {\n                webSocket.internalOnClose(code, message);\n            });\n\n            native.clearUserData(external);\n        });\n\n        native.server.group.onMessage(this.serverGroup, onServerMessage);\n\n        native.server.group.onPing(this.serverGroup, (message, webSocket) => {\n            webSocket.onping(message);\n        });\n\n        native.server.group.onPong(this.serverGroup, (message, webSocket) => {\n            webSocket.onpong(message);\n        });\n\n        native.server.group.onConnection(this.serverGroup, (external) => {\n            const webSocket = new WebSocket(external);\n\n            native.setUserData(external, webSocket);\n            this._upgradeCallback(webSocket);\n            _upgradeReq = null;\n        });\n\n        if (options.port !== undefined) {\n            if (options.host) {\n                this.httpServer.listen(options.port, options.host, () => {\n                    this.emit('listening');\n                    callback && callback();\n                });\n            } else {\n                this.httpServer.listen(options.port, () => {\n                    this.emit('listening');\n                    callback && callback();\n                });\n            }\n        }\n    }\n\n    handleUpgrade(request, socket, upgradeHead, callback) {\n        if (socket._isNative) {\n            if (this.serverGroup) {\n                _upgradeReq = request;\n                this._upgradeCallback = callback ? callback : noop;\n                native.upgrade(this.serverGroup, socket.external, secKey, request.headers['sec-websocket-extensions'], request.headers['sec-websocket-protocol']);\n            }\n        } else {\n            const secKey = request.headers['sec-websocket-key'];\n            const socketHandle = socket.ssl ? socket._parent._handle : socket._handle;\n            const sslState = socket.ssl ? socket.ssl._external : null;\n            if (socketHandle && secKey && secKey.length == 24) {\n                socket.setNoDelay(this._noDelay);\n                const ticket = native.transfer(socketHandle.fd === -1 ? socketHandle : socketHandle.fd, sslState);\n                socket.on('close', (error) => {\n                    if (this.serverGroup) {\n                        _upgradeReq = request;\n                        this._upgradeCallback = callback ? callback : noop;\n                        native.upgrade(this.serverGroup, ticket, secKey, request.headers['sec-websocket-extensions'], request.headers['sec-websocket-protocol']);\n                    }\n                });\n            }\n            socket.destroy();\n        }\n    }\n\n    broadcast(message, options) {\n        if (this.serverGroup) {\n            native.server.group.broadcast(this.serverGroup, message, options && options.binary || false);\n        }\n    }\n\n    startAutoPing(interval, userMessage) {\n        if (this.serverGroup) {\n            native.server.group.startAutoPing(this.serverGroup, interval, userMessage);\n        }\n    }\n\n    close(cb) {\n        if (this._upgradeListener && this.httpServer) {\n            this.httpServer.removeListener('upgrade', this._upgradeListener);\n\n            if (!this._passedHttpServer) {\n                this.httpServer.close();\n            }\n        }\n\n        if (this.serverGroup) {\n            native.server.group.close(this.serverGroup);\n            this.serverGroup = null;\n        }\n\n        if (typeof cb === 'function') {\n            // compatibility hack, 15 seconds timeout\n            setTimeout(cb, 20000);\n        }\n    }\n\n    get clients() {\n        if (this.serverGroup) {\n            return {\n                length: native.server.group.getSize(this.serverGroup),\n                forEach: ((cb) => {native.server.group.forEach(this.serverGroup, cb)})\n            };\n        }\n    }\n}\n\nWebSocketClient.PERMESSAGE_DEFLATE = 1;\nWebSocketClient.SLIDING_DEFLATE_WINDOW = 16;\n//WebSocketClient.SERVER_NO_CONTEXT_TAKEOVER = 2;\n//WebSocketClient.CLIENT_NO_CONTEXT_TAKEOVER = 4;\nWebSocketClient.OPCODE_TEXT = 1;\nWebSocketClient.OPCODE_BINARY = 2;\nWebSocketClient.OPCODE_PING = 9;\nWebSocketClient.OPEN = 1;\nWebSocketClient.CLOSED = 0;\nWebSocketClient.Server = Server;\nWebSocketClient.http = native.httpServer;\nWebSocketClient.native = native;\nmodule.exports = WebSocketClient;\n"]},"metadata":{},"sourceType":"script"}